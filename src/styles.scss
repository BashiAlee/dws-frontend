/* You can add global styles to this file, and also import other style files */
@import './variables';
@import "~@ng-select/ng-select/themes/default.theme.css";

@font-face {
  font-family: 'Apercu-Medium';
  src: url('assets/fonts/Apercu-Medium/Apercu-Medium.eot?#iefix') format('embedded-opentype'),
    url('assets/fonts/Apercu-Medium/Apercu-Medium.woff') format('woff'),
    url('assets/fonts/Apercu-Medium/Apercu-Medium.ttf') format('truetype'),
    url('assets/fonts/Apercu-Medium/Apercu-Medium.svg#Apercu-Medium') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Apercu-Regular';
  src: url('assets/fonts/Apercu-Regular/Apercu-Regular.eot?#iefix') format('embedded-opentype'),
    url('assets/fonts/Apercu-Regular/Apercu-Regular.woff') format('woff'),
    url('assets/fonts/Apercu-Regular/Apercu-Regular.ttf') format('truetype'),
    url('assets/fonts/Apercu-Regular/Apercu-Regular.svg#Apercu-Regular') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Apercu-Mono';
  src: url('assets/fonts/Apercu-Mono/Apercu-Mono.eot?#iefix') format('embedded-opentype'),
    url('assets/fonts/Apercu-Mono/Apercu-Mono.woff') format('woff'),
    url('assets/fonts/Apercu-Mono/Apercu-Mono.ttf') format('truetype'),
    url('assets/fonts/Apercu-Mono/Apercu-Mono.svg#Apercu-Mono') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Apercu-Bold';
  src: url('assets/fonts/Apercu-Bold/Apercu-Bold.eot?#iefix') format('embedded-opentype'),
    url('assets/fonts/Apercu-Bold/Apercu-Bold.woff') format('woff'),
    url('assets/fonts/Apercu-Bold/Apercu-Bold.ttf') format('truetype'),
    url('assets/fonts/Apercu-Bold/Apercu-Bold.svg#Apercu-Bold') format('svg');
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: 'Karla-Bold';
  src: url('assets/fonts/Karla-Bold/Karla-Bold.eot?#iefix') format('embedded-opentype'),
    url('assets/fonts/Karla-Bold/Karla-Bold.woff') format('woff'),
    url('assets/fonts/Karla-Bold/Karla-Bold.ttf') format('truetype'),
    url('assets/fonts/Karla-Bold/Karla-Bold.svg#Karla-Bold') format('svg');
  font-weight: normal;
  font-style: normal;
}

i {
  &:hover {
    cursor: pointer;
  }
}
a {

  &:hover {
    cursor: pointer;
  }
}
input:focus {
  box-shadow: none !important;
}
button {
  border: none;

  &:hover {
    cursor: pointer;
  }
  &:focus {
    outline: 0 !important;
  }
}

.makeBgWhite {
  background: $white;
  border-radius: 10px;
  padding-bottom: 54px;
}

.makeCenter {
  text-align: center;
}

input.custom-input {
  font-family: 'Apercu-Regular';
  border-radius: 3px;
  border-width: 2px;
  border-color: $border-input-color;
  height: 56px;
}

input.custom-input:focus {
  // box-shadow: none;
  border-color: $border-input-color;
}

.custom-input-label {
  font-family: 'Apercu-Regular';
  color: $input-label-color;
}

.form-heading {
  padding-top: 36px;
  font-family: 'Apercu-Regular';
  color: $heading-color;
  padding-bottom: 20px;
  font-size: 27px;
}

.custom-checkbox,
.custom-radio {
  .container {
    font-family: 'Apercu-Regular';
    font-size: 19px;
    padding-top: 3px;
    display: block;
    position: relative;
    padding-left: 49px;
    margin-bottom: 16px;
    cursor: pointer;
    -webkit-user-select: none;
    -moz-user-select: none;
    -ms-user-select: none;
    user-select: none;
  }

  /* Hide the browser's default checkbox */
  .container input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
  }

  /* Create a custom checkbox */
  .checkmark {
    position: absolute;
    top: 0;
    left: 0;
    width: 34px;
    height: 34px;
    background-color: $white;
    border-radius: 50%;
    border: 1px solid $primary-color;
  }

  /* On mouse-over, add a grey background color */
  // .container:hover input ~ .checkmark {
  //     background-color: $p-color;
  // }

  /* When the checkbox is checked, add a blue background */
  .container input:checked~.checkmark {
    background-color: $primary-color;

  }

  /* Create the checkmark/indicator (hidden when not checked) */
  .checkmark:after {
    content: "";
    position: absolute;
    display: none;
  }

  /* Show the checkmark when checked */
  .container input:checked~.checkmark:after {
    display: block;
  }

  /* Style the checkmark/indicator */
  .container .checkmark:after {
    content: '\2713';
    position: absolute;
    left: 9px;
    top: 2px;
    color: $white;
    /* background: white; */
    width: 2px;
    height: 2px;
  }
}

.custom-radio {
  margin-top: 9px;
  margin-bottom: 81px;
  clear: both;
  color: $input-label-color;
  .container {
    // width: 50%;
    width: 112px;
    float: left;
    font-size: 16px;
    padding-left: 37px;

    .checkmark {
      width: 21px;
      height: 21px;
      top: 4px;
    }
  }

  .container .checkmark:after {
    content: '\2713';
    position: absolute;
    left: 4px;
    top: 0px;
    font-size: 14px;
    color: $white;

  }
}

textarea.custom-textarea {
  resize: none;
  height: 150px !important;
}

textarea.custom-textarea:focus {
  box-shadow: none;
  border-color: $border-input-color;
}

.call-to-action {
  font-family: 'Apercu-Medium';
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-row-gap: 10px;

  margin-top: 40px;

  .goBack {
    justify-self: right;
    margin-right: 15px;

    button {
      box-shadow: 0px 11px 46px 0px rgba(190, 66, 241, 0.2);
      background: $previous-button-bg;
      color: $white;
      padding: 14px 60px 14px 60px;
      border-radius: 32px;
    }
  }

  .saveButton {
    justify-self: left;
    margin-left: 15px;

    button {

      box-shadow: 0px 11px 16px 0px rgba(190, 66, 241, 0.35);
      background: $save-button-bg;
      color: $white;
      padding: 14px 60px 14px 60px;
      border-radius: 32px;
    }
  }

  p {
    color: $buttons-desc-color;
    grid-row: 2/3;
    grid-column: 2/3;
    margin-left: 15px;
    width: 45%;
    text-align: center;
  }
}

.image-upload>input {
  display: none;
}

.image-upload i {
  color: $primary-color;
}

.image-upload {
  position: absolute;
  top: -12px;
  right: -17px;

  label {
    background: $white;
    cursor: pointer;
    box-shadow: 0px 11px 46px 0px rgba(0, 0, 0, 0.18);
    width: 39px;
    height: 39px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 50%;
  }
}

.displayPicture {
  position: relative;
  display: inline-block;

  img {
    // width: 144px;
    // height: 143px;
    width: 104px;
    height: 104px;
    border-radius: 28px;
    box-shadow: 0px 11px 46px 0px rgba(0, 0, 0, 0.2)
  }
}

.passportImage {
  position: relative;
  display: inline-block;

  img {
    // width: 593px;
    width: 100%;
    height: 309px;
    border-radius: 28px;
    box-shadow: 0px 11px 46px 0px rgba(0, 0, 0, 0.2)
  }
}

.aperu-medium {
  font-family: 'Apercu-Medium';
}

.aperu-regular {
  font-family: 'Apercu-Medium';
}

.aperu-mono {
  font-family: 'Apercu-Mono';
}

.karla-bold {
  font-family: 'Karla-Bold';
}

.mTop15 {
  margin-top: 15px;
}

.mBottom25 {
  margin-bottom: 25px;
}

.mBottom20 {
  margin-bottom: 20px;
}

input[type=number] {
  font-family: 'Karla-Bold';
}

div.ng-select-container {
  height: 56px !important;
  border-radius: 3px;
  border: 2px solid $border-input-color !important;
}


div.custom-table {

  .table {
    padding: 30px;
  }

  border-radius: 10px;
  border-width: 2px;
  border-style: solid;
  border-color: rgb(216, 216, 228);

  .table-header {
    display: grid;
    color: $primary-color;

    span {


      border-top: none;
      border-bottom: none;
    }
  }

  .table-body {
    max-height: 279px;
    overflow-y: scroll;
  }

  .table-row {
    display: grid;
    color: $table-row-color;
  }

  span {


    border-top: none;
  }

  .editRow {
    display: inline-block;
    color: $primary-color;
    width: 34px;
  }

  .deleteRow {
    width: 34px;
    display: inline-block;
    color: $delete-icon-color;
  }
}

::-webkit-scrollbar {
  width: 6px;
}

/* Track */
::-webkit-scrollbar-track {
  box-shadow: inset 0 0 5px $scroll-bar;
  border-radius: 10px;
  width: 6px;
}

/* Handle */
::-webkit-scrollbar-thumb {
  background: $primary-color;
  border-radius: 10px;
}

/* Handle on hover */
::-webkit-scrollbar-thumb:hover {
  background: $primary-color;
}

.primary-dws-button {
  background: $primary-color;
  color: $white;
  padding: 12px 45px 12px 45px;
  border-radius: 32px;
}

.button-secondary-dws {
  background: $secondary-button-color;
  color: $white;
  padding: 12px 45px 12px 45px;
  border-radius: 32px;
  text-transform: uppercase;
}

.for-four-columns {
  grid-template-columns: repeat(4, 1fr);
}

.for-three-columns {
  grid-template-columns: repeat(3, 1fr);
}

.seperator {
  width: 100%;
  border-top: 1px solid $scroll-bar;
  margin-top: 21px;
  padding-bottom: 21px;
}

.mtop30 {
  margin-top: 30px;
}

.custom-ngselect {
  div.ng-value {
    background-color: $multi-select-label-color !important;
    border: 0 !important;
    color: $white !important;
    font-family: 'Apercu-Medium' !important;
    padding: 4px 0px 4px 0 !important;
    // width: 165px !important;
    text-align: center !important;
    border-radius: 32px !important;

    .ng-value-icon {
      float: right;
      border: 0 !important;
      padding-right: 9px !important;

      &:hover {
        background-color: transparent !important;
        border: 0 !important;
      }
    }

    .ng-value-label {
      padding-left: 22px !important;
      padding-right: 7px !important;
    }
  }
}

.noPadding {
  padding-bottom: 0 !important;
}

.makeBlue {
  color: $primary-color;
}

.makeRed {
  color: $delete-icon-color;
}

.makePurple {
  color: $zoom-ic-color;
}

.imageGallery {
  font-family: 'Apercu-Medium';
  text-align: center;

  .thumb-img {
    img {
      width: 100%;
      height: 214px;
      border-radius: 7px;
    }
  }

  .thumb-title {
    font-size: 16px;
  }

  .thumb-description {
    font-size: 14px;
  }
}

.inline-block {
  display: inline-block;
  width: 20%;

  i {
    font-size: 21px;
  }
}

.hide-overflow {
  height: 44px;
  overflow: hidden;
}

.docs-dec {
  p {
    font-family: 'Apercu-Regular';
    line-height: 2.251
  }
}

.achievement-dec {
  p {
    font-family: 'Apercu-Regular';
    line-height: 2.251;
  }

  .makePink {
    color: $multi-select-label-color !important;
    text-decoration: underline !important;
    font-family: 'Apercu-Bold';
  }
}

.invalid-feedback {
  display: block !important;
}
button.disabledButton {
  cursor: no-drop;
  opacity: 0.6;
}
input[type=number]::-webkit-inner-spin-button, 
input[type=number]::-webkit-outer-spin-button {
     -webkit-appearance: none !important;
}

input[type=number] {
  -moz-appearance: textfield;
}