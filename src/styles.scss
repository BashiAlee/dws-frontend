/* You can add global styles to this file, and also import other style files */
@import './variables';
@font-face {
    font-family: 'Apercu-Medium';
    src: url('assets/fonts/Apercu-Medium/Apercu-Medium.eot?#iefix') format('embedded-opentype'), 
    url('assets/fonts/Apercu-Medium/Apercu-Medium.woff') format('woff'), 
    url('assets/fonts/Apercu-Medium/Apercu-Medium.ttf') format('truetype'), 
    url('assets/fonts/Apercu-Medium/Apercu-Medium.svg#Apercu-Medium') format('svg');
    font-weight: normal;
    font-style: normal;
  }
  @font-face {
    font-family: 'Apercu-Regular';
    src: url('assets/fonts/Apercu-Regular/Apercu-Regular.eot?#iefix') format('embedded-opentype'), 
    url('assets/fonts/Apercu-Regular/Apercu-Regular.woff') format('woff'), 
    url('assets/fonts/Apercu-Regular/Apercu-Regular.ttf') format('truetype'), 
    url('assets/fonts/Apercu-Regular/Apercu-Regular.svg#Apercu-Regular') format('svg');
    font-weight: normal;
    font-style: normal;
  }

  @font-face {
    font-family: 'Apercu-Mono';
    src: url('assets/fonts/Apercu-Mono/Apercu-Mono.eot?#iefix') format('embedded-opentype'), 
    url('assets/fonts/Apercu-Mono/Apercu-Mono.woff') format('woff'), 
    url('assets/fonts/Apercu-Mono/Apercu-Mono.ttf') format('truetype'), 
    url('assets/fonts/Apercu-Mono/Apercu-Mono.svg#Apercu-Mono') format('svg');
    font-weight: normal;
    font-style: normal;
  }
  @font-face {
    font-family: 'Karla-Bold';
    src: url('assets/fonts/Karla-Bold/Karla-Bold.eot?#iefix') format('embedded-opentype'), 
    url('assets/fonts/Karla-Bold/Karla-Bold.woff') format('woff'), 
    url('assets/fonts/Karla-Bold/Karla-Bold.ttf') format('truetype'), 
    url('assets/fonts/Karla-Bold/Karla-Bold.svg#Karla-Bold') format('svg');
    font-weight: normal;
    font-style: normal;
  }

  .makeBgWhite {
      background: $white;
      border-radius: 10px;
      padding-bottom: 54px;
  }

  .makeCenter {
      text-align: center;
  }

  input.custom-input {
      font-family: 'Apercu-Regular';
      border-radius: 3px;
      border-width: 2px; 
      border-color: $border-input-color;
      height: 73px;
  }

  input.custom-input:focus {
      box-shadow: none;
      border-color: $border-input-color;
  }
  .custom-input-label {
    font-family: 'Apercu-Regular';
  }
  
  .form-heading {
    padding-top: 36px;
    font-family: 'Apercu-Regular';
    color:$heading-color;
    padding-bottom: 20px;
    font-size: 26px;
  }

  .custom-checkbox {
    .container {
        font-family: 'Apercu-Regular';
        font-size: 19px;
    padding-top: 3px;
        display: block;
        position: relative;
        padding-left: 49px;
        margin-bottom: 16px;
        cursor: pointer;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }
    
    /* Hide the browser's default checkbox */
    .container input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
    }
    
    /* Create a custom checkbox */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        width: 34px; 
        height: 34px;
        background-color:$white;
        border-radius: 50%;
        border: 1px solid $primary-color;
    }
    
    /* On mouse-over, add a grey background color */
    // .container:hover input ~ .checkmark {
    //     background-color: $p-color;
    // }
    
    /* When the checkbox is checked, add a blue background */
    .container input:checked ~ .checkmark {
        background-color: $primary-color;
        
    }
    
    /* Create the checkmark/indicator (hidden when not checked) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }
    
    /* Show the checkmark when checked */
    .container input:checked ~ .checkmark:after {
        display: block;
    }
    
    /* Style the checkmark/indicator */
    .container .checkmark:after {
        // left: 5px;
        // top: 5px;
        // width: 22px;
        // height: 22px;
        // background: $white;
        // border-radius: 50%;
        // -webkit-transform: rotate(45deg);
        // -ms-transform: rotate(45deg);
        // transform: rotate(45deg);
        // content: '\2713';
        // position: absolute;
        // left: 5px;
        // top: 9px;
        // background: white;
        // width: 2px;
        // height: 2px;
        // // box-shadow: 
        // //   2px 0 0 white,
        // //   4px 0 0 white,
        // //   4px -2px 0 white,
        // //   4px -4px 0 white,
        // //   4px -6px 0 white,
        // //   4px -8px 0 white;
        // transform: rotate(45deg);
        content: '\2713';
        position: absolute;
        left: 9px;
        top: 2px;
        color: $white;
        /* background: white; */
        width: 2px;
        height: 2px;
    }
  }

  textarea.custom-textarea {
    resize: none;
    height: 150px !important;
  }
  textarea.custom-textarea:focus {
    box-shadow: none;
    border-color: $border-input-color;
  }

.call-to-action {
    font-family: 'Apercu-Medium';
    display: grid;
    grid-template-columns: 1fr 1fr;
    grid-row-gap: 10px;

    margin-top: 40px;

  .goBack {
    justify-self: right;
    margin-right: 15px;
      button {
        box-shadow: 0px 11px 46px 0px rgba(190, 66, 241, 0.2);
        background: $previous-button-bg;
        color: $white;
        padding: 14px 60px 14px 60px;
           border-radius: 32px;
      }
  }

  .saveButton {
    justify-self: left;
    margin-left: 15px;

      button {
        box-shadow: 0px 11px 16px 0px rgba(190, 66, 241, 0.35);
        background: $save-button-bg;
        color: $white;
        padding: 14px 60px 14px 60px;
           border-radius: 32px;
      }
  }
  p{
      color: $buttons-desc-color;
      grid-row: 2/3;
      grid-column: 2/3;
      margin-left: 15px;
      width: 45%;
      text-align: center;
  }
}